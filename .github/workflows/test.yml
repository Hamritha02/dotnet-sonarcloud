name: CI2

on:
  push:
  workflow_dispatch:
   
jobs:
  build_and_test:

    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'Solution1/UnitTest.sln'
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      
   
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x


    - name: Restore dependencies
      run: dotnet restore $SOLUTION

    - name: Build
      run: dotnet build $SOLUTION --configuration $BUILD_CONFIG
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
       # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        sonar.organization: hamritha02-1  # Replace with your SonarCloud organization key
        sonar.projectKey: hamritha02-1  # Replace with your SonarCloud project key
        #authToken: ${{ secrets.SONAR_TOKEN }}
    - name: Test
      run: dotnet test $SOLUTION --configuration $BUILD_CONFIG --logger "xunit;LogFileName=test-results.xml" || true
    
    - name: Publish Specflow Test Logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          **/test-results.xml
    - name: "Get Xray Token"
      id: xray-token
      shell: bash
      run: |
        echo ::set-output name=XRAY_TOKEN::$(curl -k -H "Content-Type: application/json" -X POST --data "{ \"client_id\": \"$CLIENT_ID\",\"client_secret\": \"$CLIENT_SECRET\" }" https://xray.cloud.getxray.app/api/v1/authenticate)
       
         
    - name: "Import results to Xray"
      # env:
      #   JIRA_SERVER_URL: ${{ secrets.XRAY_URL }}
      #   JIRA_USERNAME: ${{ secrets.jira_username }}
      #   JIRA_PASSWORD: ${{ secrets.jira_password }}
       # JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
       # JIRA_API_TOKEN: ${{ secrets.XRAY_TOKEN }}
      shell: bash 
      run: 'curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer ${{ steps.xray-token.outputs.XRAY_TOKEN }}"  --data @"/home/runner/work/x-raypocgithubaction-dotnet-xml/x-raypocgithubaction-dotnet-xml/Solution1/UnitTestProject/TestResults/test-results.xml"  https://xray.cloud.getxray.app/api/v1/import/execution/xunit?projectKey=PX'


      

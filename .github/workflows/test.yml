name: CI2

on:
 # push:
  workflow_dispatch:
   
jobs:
  build_and_test:

    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'Solution1/UnitTest.sln'
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      
   
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x


    - name: Restore dependencies
      run: dotnet restore $SOLUTION

    - name: Build
      run: dotnet build $SOLUTION --configuration $BUILD_CONFIG
    
    - name: Install SonarCloud scanners
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-coverage
    - name: SonarCloud Scan
     # uses: sonarsource/sonarcloud-github-action@master
            #shell: powershell
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
      run: |
          dotnet-sonarscanner begin /k:"Hamritha02_Assignment2" /o:"hamritha02-1" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" 
          dotnet build Solution1/UnitTest.sln
          #dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths=="**/coverage.xml"
      #shell: pwsh
   
    - name: Test
      run: dotnet test $SOLUTION --configuration $BUILD_CONFIG --logger "xunit;LogFileName=test-results.xml" || true
    
    - name: upload coverage report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: dotnet test report
        path: |
          **/coverage.xml
          
    - name: Publish Specflow Test Logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: dotnet-test
        path: |
          **/test-results.xml
    - name: "Get Xray Token"
      id: xray-token
      shell: bash
      run: |
        echo ::set-output name=XRAY_TOKEN::$(curl -k -H "Content-Type: application/json" -X POST --data "{ \"client_id\": \"$CLIENT_ID\",\"client_secret\": \"$CLIENT_SECRET\" }" https://xray.cloud.getxray.app/api/v1/authenticate)
       
         
    - name: "Import results to Xray"
      id: push-to-xray
      continue-on-error: true
      shell: bash 
      run: 'curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer ${{ steps.xray-token.outputs.XRAY_TOKEN }}"  --data @"/home/runner/work/dotnet-sonarcloud/dotnet-sonarcloud/Solution1/UnitTestProject/TestResults/test-results.xml"  https://xray.cloud.getxray.app/api/v1/import/execution/xunit?projectKey=PX'
      
    - name: Send mail
      #continue-on-error: true
      if: steps.push-to-xray.outcome == 'failure'
      env:
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: 465
          SMTP_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
    
      run: |
          #echo "Subject: Workflow failed" | sendmail -v -S $SMTP_SERVER -P $SMTP_PORT -xu $SMTP_USERNAME -xp $SMTP_PASSWORD hamrithaanand02@gmail.com
          run: |
          echo "subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}" > email.txt
          echo -e "From: SMTP_USERNAME\nTo: hamrithaanand02@gmail.com\n" >> email.txt
          echo -e "There was a failure in the workflow.subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }} \n" >> email.txt
          cat email.txt | curl --url "smtps://$SMTP_SERVER:$SMTP_PORT" --ssl-reqd --mail-from "Hamritha" --mail-rcpt "hamrithaanand02@gmail.com" --user "$SMTP_USERNAME:$SMTP_PASSWORD" -T -
      
